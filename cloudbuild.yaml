# Cloud Build pipeline: build -> push -> deploy to GKE
# Uses trigger substitutions for Artifact Registry and GKE

options:
  logging: CLOUD_LOGGING_ONLY

steps:
  - id: "Docker build"
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t","$_AR_REGION-docker.pkg.dev/$PROJECT_ID/$_AR_REPO/hello-app:$SHORT_SHA",
        "-t","$_AR_REGION-docker.pkg.dev/$PROJECT_ID/$_AR_REPO/hello-app:latest",
        "."
      ]

  - id: "Push :$SHORT_SHA"
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "$_AR_REGION-docker.pkg.dev/$PROJECT_ID/$_AR_REPO/hello-app:$SHORT_SHA"
      ]

  - id: "Push :latest"
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "$_AR_REGION-docker.pkg.dev/$PROJECT_ID/$_AR_REPO/hello-app:latest"
      ]

  - id: "Get GKE credentials"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "container","clusters","get-credentials","$_GKE_CLUSTER",
        "--zone","$_GKE_REGION",
        "--project","$PROJECT_ID"
      ]

  - id: "Create namespace (if missing)"
    name: "gcr.io/cloud-builders/kubectl"
    entrypoint: "bash"
    script: |
      set -euo pipefail
      kubectl create ns "$_K8S_NAMESPACE" --dry-run=client -o yaml | kubectl apply -f -

  - id: "Apply manifests"
    name: "gcr.io/cloud-builders/kubectl"
    args: ["apply","-f","k8s/","-n","$_K8S_NAMESPACE"]

  - id: "Rollout restart"
    name: "gcr.io/cloud-builders/kubectl"
    args: ["rollout","restart","deployment/hello-app","-n","$_K8S_NAMESPACE"]

  - id: "Wait for rollout"
    name: "gcr.io/cloud-builders/kubectl"
    args: ["rollout","status","deployment/hello-app","-n","$_K8S_NAMESPACE","--timeout=180s"]

images:
  - "$_AR_REGION-docker.pkg.dev/$PROJECT_ID/$_AR_REPO/hello-app:$SHORT_SHA"
  - "$_AR_REGION-docker.pkg.dev/$PROJECT_ID/$_AR_REPO/hello-app:latest"

